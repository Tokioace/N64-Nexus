/* üéÆ Battle64 Design System - Animations & Effects */

/* üé≠ Base Animation Classes */
.animate {
  animation-duration: var(--transition-normal);
  animation-fill-mode: both;
  animation-timing-function: ease-in-out;
}

.animate-fast {
  animation-duration: var(--transition-fast);
}

.animate-slow {
  animation-duration: var(--transition-slow);
}

.animate-bounce {
  animation-timing-function: var(--transition-bounce);
}

/* üéÆ Retro Arcade Click Effect */
.retro-click {
  position: relative;
  overflow: hidden;
  transition: all var(--transition-fast);
}

.retro-click::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: radial-gradient(circle, var(--color-primary) 0%, transparent 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all 0.3s ease-out;
}

.retro-click:active::before {
  width: 200px;
  height: 200px;
  opacity: 0.3;
}

/* ‚ú® Glitter/Sparkle Effect */
.sparkle {
  position: relative;
  overflow: hidden;
}

.sparkle::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.1) 35%,
    rgba(255, 255, 255, 0.3) 40%,
    transparent 45%
  );
  animation: sparkle var(--sparkle-duration) linear infinite;
  pointer-events: none;
}

@keyframes sparkle {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(0deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(360deg);
  }
}

/* üéÆ Glitch Effect */
.glitch {
  position: relative;
  animation: glitch var(--transition-slow) infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
}

.glitch::before {
  animation: glitch-1 0.3s infinite;
  color: var(--color-pixel-red);
  z-index: -1;
}

.glitch::after {
  animation: glitch-2 0.3s infinite;
  color: var(--color-neon-green);
  z-index: -2;
}

@keyframes glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

@keyframes glitch-1 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

@keyframes glitch-2 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(2px, -2px); }
  40% { transform: translate(2px, 2px); }
  60% { transform: translate(-2px, -2px); }
  80% { transform: translate(-2px, 2px); }
}

/* üéØ Hover Effects */
.hover-shimmer {
  position: relative;
  overflow: hidden;
}

.hover-shimmer::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.5s;
}

.hover-shimmer:hover::before {
  left: 100%;
}

.hover-shake {
  transition: transform var(--transition-fast);
}

.hover-shake:hover {
  animation: shake 0.5s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
  20%, 40%, 60%, 80% { transform: translateX(2px); }
}

/* üéÆ Button Animations */
.btn-pulse {
  animation: pulse 2s infinite;
}

.btn-pulse:hover {
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(110, 74, 255, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(110, 74, 255, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(110, 74, 255, 0);
  }
}

/* üéØ Loading Animations */
.loading-cartridge {
  width: var(--cartridge-width);
  height: var(--cartridge-height);
  background: var(--color-surface);
  border: 2px solid var(--color-primary);
  border-radius: var(--radius-md);
  position: relative;
  animation: cartridge-spin 2s linear infinite;
}

.loading-cartridge::before {
  content: 'N64';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: var(--font-primary);
  font-size: 0.75rem;
  color: var(--color-primary);
}

@keyframes cartridge-spin {
  0% { transform: rotateY(0deg); }
  100% { transform: rotateY(360deg); }
}

/* ‚≠ê Star Rain Effect */
.star-rain {
  position: relative;
  overflow: hidden;
}

.star-rain::before {
  content: '‚òÖ';
  position: absolute;
  top: -20px;
  left: 50%;
  color: var(--color-neon-green);
  font-size: 1.5rem;
  animation: starFall 1s ease-in forwards;
  transform: translateX(-50%);
}

@keyframes starFall {
  0% {
    top: -20px;
    opacity: 1;
    transform: translateX(-50%) scale(0.5);
  }
  50% {
    opacity: 1;
    transform: translateX(-50%) scale(1.2);
  }
  100% {
    top: 100%;
    opacity: 0;
    transform: translateX(-50%) scale(0.8);
  }
}

/* üé≠ Parallax Effect */
.parallax {
  transform: translateZ(0);
  will-change: transform;
}

.parallax-slow {
  transform: translateZ(calc(var(--parallax-depth) * -1px));
}

.parallax-fast {
  transform: translateZ(calc(var(--parallax-depth) * 1px));
}

/* üéÆ Success/Medal Animations */
.success-bounce {
  animation: successBounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes successBounce {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* üéØ Fade Animations */
.fade-in {
  animation: fadeIn var(--transition-normal) ease-in-out;
}

.fade-out {
  animation: fadeOut var(--transition-normal) ease-in-out;
}

.fade-in-up {
  animation: fadeInUp var(--transition-normal) ease-out;
}

.fade-in-down {
  animation: fadeInDown var(--transition-normal) ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* üéÆ Slide Animations */
.slide-in-left {
  animation: slideInLeft var(--transition-normal) ease-out;
}

.slide-in-right {
  animation: slideInRight var(--transition-normal) ease-out;
}

.slide-in-up {
  animation: slideInUp var(--transition-normal) ease-out;
}

.slide-in-down {
  animation: slideInDown var(--transition-normal) ease-out;
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* üé≠ Scale Animations */
.scale-in {
  animation: scaleIn var(--transition-normal) ease-out;
}

.scale-out {
  animation: scaleOut var(--transition-normal) ease-in;
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.5);
  }
}

/* üéÆ Rotate Animations */
.rotate-in {
  animation: rotateIn var(--transition-normal) ease-out;
}

.rotate-out {
  animation: rotateOut var(--transition-normal) ease-in;
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-200deg);
  }
  to {
    opacity: 1;
    transform: rotate(0deg);
  }
}

@keyframes rotateOut {
  from {
    opacity: 1;
    transform: rotate(0deg);
  }
  to {
    opacity: 0;
    transform: rotate(200deg);
  }
}

/* üéØ Error/Glitch Animations */
.error-flash {
  animation: errorFlash 0.5s ease-in-out;
}

@keyframes errorFlash {
  0%, 100% {
    background-color: var(--color-surface);
  }
  25%, 75% {
    background-color: var(--color-pixel-red);
  }
  50% {
    background-color: var(--color-surface);
  }
}

/* üéÆ Continuous Animations */
.float {
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.breathe {
  animation: breathe 4s ease-in-out infinite;
}

@keyframes breathe {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

/* üé≠ Utility Classes for Animation Control */
.animation-paused {
  animation-play-state: paused;
}

.animation-running {
  animation-play-state: running;
}

.animation-delay-1 {
  animation-delay: 0.1s;
}

.animation-delay-2 {
  animation-delay: 0.2s;
}

.animation-delay-3 {
  animation-delay: 0.3s;
}

.animation-delay-4 {
  animation-delay: 0.4s;
}

.animation-delay-5 {
  animation-delay: 0.5s;
}

/* üì± Mobile Optimizations */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

@media (max-width: 768px) {
  .sparkle::after {
    animation-duration: calc(var(--sparkle-duration) * 0.7);
  }
  
  .loading-cartridge {
    width: calc(var(--cartridge-width) * 0.8);
    height: calc(var(--cartridge-height) * 0.8);
  }
}